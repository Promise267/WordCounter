{"ast":null,"code":"var _jsxFileName = \"D:\\\\College\\\\SEMESTER7\\\\CCD\\\\Project\\\\my-first-app\\\\my-first-app\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast, Slide } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const [toggle, setToggle] = useState(false);\n  const [text, setText] = useState('');\n  const handleChangeClick = () => {\n    console.log(\"Changed Case \" + text);\n    console.log(\"Toggle State \" + toggle);\n    if (!toggle) {\n      setText(text.toUpperCase());\n      setToggle(true);\n      toast.success(\"Converted to UpperCase\", {\n        position: 'bottom-right',\n        transition: Slide,\n        theme: props.mode\n      });\n    } else {\n      setText(text.toLowerCase());\n      setToggle(false);\n      toast.success(\"Converted to LowerCase\", {\n        position: 'bottom-right',\n        transition: Slide,\n        theme: props.mode\n      });\n    }\n  };\n  const handleClearClick = () => {\n    setText('');\n    toast.success(\"TextBox is Cleared\", {\n      position: 'bottom-right',\n      transition: Slide,\n      theme: props.mode\n    });\n  };\n  const handleCopy = () => {\n    let textArea = document.getElementById('contentBox');\n    textArea.setSelectionRange(0, textArea.value.length);\n    navigator.clipboard.writeText(textArea.value);\n    toast.success(\"Copied to Clipboard\", {\n      position: 'bottom-right',\n      transition: Slide,\n      theme: props.mode\n    });\n  };\n  const handleOnChange = event => {\n    console.log(\"On Change\");\n    setText(event.target.value);\n  };\n\n  // let countWords = () => {\n  //     const textBox = document.getElementById('contentBox');\n  //     const chars = textBox.value.trim()\n  //     const words = text.split(/\\s+/);\n  //     const numWords = words.length;\n  //     return numWords;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-floating\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `text-${props.mode === 'dark' ? 'light' : 'dark'}`,\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: `form-control bg-${props.mode === 'dark' ? 'dark' : 'light'} text-${props.mode === 'dark' ? 'light' : 'dark'} border-0`,\n        value: text,\n        placeholder: \"Write Something You Want........ \\u270F \",\n        id: \"contentBox\",\n        onChange: handleOnChange,\n        rows: \"20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-row-reverse bd-highlight\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-${props.mode === 'dark' ? 'dark' : 'primary'}`,\n            value: \"Convert to UpperCase\",\n            id: \"clearText\",\n            onClick: handleClearClick,\n            children: \"Clear Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-${props.mode === 'dark' ? 'dark' : 'primary'}`,\n            value: \"Convert to UpperCase\",\n            id: \"changeText\",\n            onClick: handleChangeClick,\n            children: \"Change Case\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-${props.mode === 'dark' ? 'dark' : 'primary'}`,\n            value: \"Convert to UpperCase\",\n            id: \"copyText\",\n            onClick: handleCopy,\n            children: \"Copy Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `container text-${props.mode === 'dark' ? 'light' : 'dark'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(/\\s+/).length - 1, \" words and \", text.trim().length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time to read \", text.split(/\\s+/).length * 1 / 125, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(TextForm, \"929Pg14KuShdaIbWjeZ+W69GaII=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","toast","Slide","jsxDEV","_jsxDEV","TextForm","props","_s","toggle","setToggle","text","setText","handleChangeClick","console","log","toUpperCase","success","position","transition","theme","mode","toLowerCase","handleClearClick","handleCopy","textArea","document","getElementById","setSelectionRange","value","length","navigator","clipboard","writeText","handleOnChange","event","target","className","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","id","onChange","rows","onClick","split","trim","_c","$RefreshReg$"],"sources":["D:/College/SEMESTER7/CCD/Project/my-first-app/my-first-app/src/components/TextForm.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {toast, Slide} from 'react-toastify';\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const[toggle, setToggle] = useState(false);\r\n    const [text,setText] = useState('');\r\n    const handleChangeClick = () => {\r\n        console.log(\"Changed Case \" + text);\r\n        console.log(\"Toggle State \" + toggle);\r\n        if(!toggle){\r\n            setText(text.toUpperCase());\r\n            setToggle(true)\r\n            toast.success(\"Converted to UpperCase\", {\r\n                position: 'bottom-right',\r\n                transition: Slide,\r\n                theme: props.mode\r\n            })\r\n        }\r\n        else{\r\n            setText(text.toLowerCase());\r\n            setToggle(false);\r\n            toast.success(\"Converted to LowerCase\", {\r\n                position: 'bottom-right',\r\n                transition: Slide,\r\n                theme: props.mode\r\n            })\r\n        }\r\n    }\r\n    const handleClearClick = () => {\r\n        setText('')\r\n        toast.success(\"TextBox is Cleared\", {\r\n            position: 'bottom-right',\r\n            transition: Slide,\r\n            theme: props.mode\r\n        })\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        let textArea = document.getElementById('contentBox');\r\n        textArea.setSelectionRange(0, textArea.value.length);\r\n        navigator.clipboard.writeText(textArea.value);\r\n        toast.success(\"Copied to Clipboard\", {\r\n            position: 'bottom-right',\r\n            transition: Slide,\r\n            theme: props.mode\r\n        })\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        console.log(\"On Change\")\r\n        setText(event.target.value)\r\n    }\r\n\r\n\r\n    // let countWords = () => {\r\n    //     const textBox = document.getElementById('contentBox');\r\n    //     const chars = textBox.value.trim()\r\n    //     const words = text.split(/\\s+/);\r\n    //     const numWords = words.length;\r\n    //     return numWords;\r\n    // }\r\n\r\n    return (\r\n    <div className=\"form-floating\">\r\n        <div className=\"mb-3\">\r\n            <h1 className={`text-${props.mode === 'dark'?'light':'dark'}`}>{props.heading}</h1>\r\n            <textarea className={`form-control bg-${props.mode === 'dark'?'dark':'light'} text-${props.mode === 'dark'?'light':'dark'} border-0`} value = {text} placeholder=\"Write Something You Want........ ✏ \" id=\"contentBox\" onChange={handleOnChange} rows=\"20\" ></textarea>\r\n        </div>\r\n        <div className=\"container\">\r\n            <div className=\"d-flex flex-row-reverse bd-highlight\">\r\n                <div className=\"p-2\">\r\n                    <button className={`btn btn-${props.mode === 'dark'?'dark':'primary'}`} value = \"Convert to UpperCase\" id = \"clearText\" onClick={handleClearClick}>Clear Text</button>\r\n                </div>\r\n                <div className=\"p-2\">\r\n                    <button className={`btn btn-${props.mode === 'dark'?'dark':'primary'}`} value = \"Convert to UpperCase\" id = \"changeText\" onClick={handleChangeClick}>Change Case</button>\r\n                </div>\r\n                <div className=\"p-2\">\r\n                    <button className={`btn btn-${props.mode === 'dark'?'dark':'primary'}`} value = \"Convert to UpperCase\" id = \"copyText\" onClick={handleCopy}>Copy Text</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className={`container text-${props.mode === 'dark'?'light':'dark'}`}>\r\n            <h1>Your Text Summary</h1>\r\n            <p>{text.split(/\\s+/).length - 1} words and {text.trim().length} characters</p>\r\n            <p>Time to read {(text.split(/\\s+/).length * 1/125)} minutes</p>\r\n            <h3>Preview</h3>\r\n            <p>{text}</p>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}